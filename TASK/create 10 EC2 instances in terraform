1]Using count to Create 10 EC2 Instances
This method is straightforward and defines everything in a single file.

main.tf
provider "aws" {
  region = "us-east-1"  # Change as needed
}

# Create 10 EC2 instances
resource "aws_instance" "instances" {
  count         = 10
  ami          = "ami-0c55b159cbfafe1f0"  # Replace with a valid AMI ID
  instance_type = "t2.micro"

  tags = {
    Name = "instance-${count.index + 1}"
  }
}

# Output instance public IPs
output "instance_ips" {
  value = aws_instance.instances[*].public_ip
}


2]Using for_each to Create 10 EC2 Instances
If you prefer to assign specific names to instances without using variables, you can do:

main.tf
provider "aws" {
  region = "us-east-1"
}

# Create 10 EC2 instances with specific names
resource "aws_instance" "instances" {
  for_each = toset([
    "instance-1", "instance-2", "instance-3", "instance-4", "instance-5",
    "instance-6", "instance-7", "instance-8", "instance-9", "instance-10"
  ])

  ami          = "ami-0c55b159cbfafe1f0"  # Replace with a valid AMI ID
  instance_type = "t2.micro"

  tags = {
    Name = each.key
  }
}

# Output instance public IPs
output "instance_ips" {
  value = [for instance in aws_instance.instances : instance.public_ip]
}


#terraform init
#terraform plan
#terraform apply --auto-approve
